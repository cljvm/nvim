# 插件管理
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'haya14busa/dein-command.vim'


# 外观
[[plugins]]
repo = 'bling/vim-airline'
hook_source = '''
    let g:airline_powerline_fonts = 1
    let g:airline_theme = 'tender'
    let g:airline#extensions#tmuxline#enabled = 1
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#tab_min_count = 2
    let g:airline#extensions#bufferline#overwrite_variables = 0
    let g:airline#extensions#bufferline#enabled = 0
    let g:airline#extensions#tabline#show_buffers = 0
    let g:airline#extensions#tabline#fnamemod = ':t'
    let g:airline_section_z = airline#section#create(["\uE0A1" . '%{line(".")}' . " \uE0A3" . '%{col(".")}'])
    let g:airline#extensions#whitespace#enabled = 0
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'jacoborus/tender.vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'


# Tmux
[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

[[plugins]]
repo = 'edkolev/tmuxline.vim'


# Git
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'chemzqm/vim-easygit'

[[plugins]]
repo = 'chemzqm/denite-git'

[[plugins]]
repo = 'mhinz/vim-signify'

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin', { 'on_cmd': [ 'NERDTreeToggle',  'NERDTreeTabsToggle'] }


# 编辑
[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'justinmk/vim-sneak'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
    function! CommentAppendLine()
        if (getline('.')=~'^\s*$')
            exe 'TCommentBlock'
        else
            normal! $
            normal! l
            exe 'TCommentRight'
        endif
        startinsert!
    endfunction
    nnoremap <silent> <LocalLeader><Space> :call CommentAppendLine()<CR>

'''
  
[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = 'matze/vim-move'

[[plugins]]
repo = 'tpope/vim-speeddating'

[[plugins]]
repo = 'junegunn/rainbow_parentheses.vim'

[[plugins]]
repo = 'Raimondi/delimitMate'
hook_source = '''
    let delimitMate_expand_cr=1
    let delimitMate_expand_space=1
    let delimitMate_balance_matchpairs=1
'''

[[plugins]]
repo = 'roxma/vim-paste-easy'

[[plugins]]
repo = 'vim-asterisk'

[[plugins]]
repo = 'AdamWhittingham/vim-copy-filename'

[[plugins]]
repo = 'Chiel92/vim-autoformat'


# 自动补全
[[plugins]]
repo = 'shougo/deoplete.nvim'
hook_add = '''
    inoremap <expr><Tab>  pumvisible() ? "\<C-N>" : "\<Tab>"
    inoremap <expr><S-Tab> pumvisible() ? "\<C-P>" : "\<S-Tab>"
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'

[[plugins]]
repo = 'rust-lang/rust.vim'

[[plugins]]
repo = 'carlitux/deoplete-ternjs') # 需要安装tern(nodejs

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'


# 语言分析(Linting)
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_sign_column_always=1
    let g:ale_sign_error="⨉"
    let g:ale_sign_warning="⚠"
    let g:ale_statusline_format = ["E %d", "W %d", "ok"]
    let g:ale_echo_msg_error_str = "E"
    let g:ale_echo_msg_warning_str = "W"
    let g:ale_echo_msg_format = "[%linter%] %s [%severity%]"
    let g:ale_lint_on_text_changed = "never"
    let g:ale_javascript_eslint_use_global = 0
'''
hook_source = '''
    nmap <silent> [w <Plug>(ale_previous)
    nmap <silent> ]w <Plug>(ale_next)
    highlight ALEErrorSign guibg=NONE guifg=red
    highlight ALEWarningSign guibg=NONE guifg=yellow
'''

# 语法高亮 
[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'PeterRincker/vim-argumentative'

[[plugins]]
repo = 'Olical/vim-syntax-expand'


# 编程环境
[[plugins]]
repo = 'klen/python-mode'

[[plugins]]
repo = 'metakirby5/codi.vim'


# 查找、替换
[[plugins]]
repo = 'dyng/ctrlsf.vim'

# TODO 使用 'lotabout/skim' 代替，以支持中文
[[plugins]]
repo = 'junegunn/fzf'

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'haya14busa/incsearch'
on_map = {'in': '<Plug>'}
hook_add = '''
    map /  <Plug>(incsearch-forward)
    map ?  <Plug>(incsearch-backward)
    map g/ <Plug>(incsearch-stay)
    map n  <Plug>(incsearch-nohl-n)
    map N  <Plug>(incsearch-nohl-N)
    map *  <Plug>(incsearch-nohl0)<Plug>(asterisk-z*)
    map g* <Plug>(incsearch-nohl0)<Plug>(asterisk-gz*)
    map #  <Plug>(incsearch-nohl0)<Plug>(asterisk-z#)
    map g# <Plug>(incsearch-nohl0)<Plug>(asterisk-gz#)
'''
hook_source = '''
    let g:incsearch#magic='\m'
    let g:incsearch#auto_nohlsearch=1
'''


# Vim 扩展
[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-unimpaired'

[[plugins]]
repo = 'tpope/vim-abolish'

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'roman/golden-ratio'


# NeoVim Terminal 扩展
[[plugins]]
repo = 'vimlab/split-term.vim'

[[plugins]]
repo = 'wvffle/vimterm'


# 工具栏
[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
    let g:tagbar_autofocus = 1
'''
hook_source = '''
    nnoremap <Leader>t :TagbarToggle<CR>
'''

[[plugins]]
repo = 'sjl/gundo.vim', { 'on': 'GundoToggle' }

[[plugins]]
repo = 'scrooloose/nerdtree', { 'on': [ 'NERDTreeToggle',  'NERDTreeTabsToggle'] }
hook_add = '''
    let NERDTreeChDirMode=2
    let NERDTreeShowBookmarks=1
    let NERDTreeShowHidden=1
    let NERDTreeShowLineNumbers=1
    augroup nerd_loader
        autocmd!
        autocmd VimEnter * silent! autocmd! FileExplorer
        autocmd BufEnter,BufNew *
                    \  if isdirectory(expand('<amatch>'))
                        echo "nerd_loader"
                    \|   call plug#load('nerdtree')
                    \|   execute 'autocmd! nerd_loader'
                    \| endif
    augroup END
'''
hook_source = '''
    nnoremap <Leader>f :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs', { 'on': [ 'NERDTreeToggle',  'NERDTreeTabsToggle'] }

[[plugins]]
repo = 'bling/vim-bufferline'


# 会话管理
[[plugins]]
repo = 'tpope/vim-obsession'

